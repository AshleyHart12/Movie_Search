{"ast":null,"code":"var _jsxFileName = \"/Users/ashinator/codePractice/movie_database/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from './Components/Navbar';\nimport Movie from './Components/movieCard';\nimport Footer from './Components/footer';\nimport Search from './Components/search';\nimport Axios from \"axios\";\n\nfunction App() {\n  const [movies, setMovies] = useState({\n    loading: false,\n    movies: null\n  });\n  useEffect(() => {\n    setMovies({\n      loading: true\n    });\n    const url = \"http://www.omdbapi.com/?i=tt3896198&apikey=dc43bd63\";\n    fetch(url).then(res => res.json()).then(response => {\n      setMovies({\n        loading: false,\n        movies: response.title\n      });\n      console.log(movies);\n    });\n  }, [movies]); // The fetch() API is an inbuilt JavaScript method for getting resources from a server or an API endpoint. It’s similar to XMLHttpRequest, but the fetch API provides a more powerful and flexible feature set.\n  // const search = input => {\n  //   fetch(`http://www.omdbapi.com/?t=Game of Thrones&Season=1`)\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log(data);\n  //    })\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, movies));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashinator/codePractice/movie_database/src/App.js"],"names":["React","useState","useEffect","Navbar","Movie","Footer","Search","Axios","App","movies","setMovies","loading","url","fetch","then","res","json","response","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AACnCU,IAAAA,OAAO,EAAE,KAD0B;AAEnCF,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAApC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAAC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAT;AACA,UAAMC,GAAG,GAAG,qDAAZ;AACDC,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,EACCF,IADD,CACMG,QAAQ,IAAI;AAChBP,MAAAA,SAAS,CAAC;AAACC,QAAAA,OAAO,EAAE,KAAV;AAAiBF,QAAAA,MAAM,EAAEQ,QAAQ,CAACC;AAAlC,OAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACD,KAJD;AAKA,GARQ,EAQN,CAACA,MAAD,CARM,CAAT,CANa,CAgBf;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAL,CAFF,CADF;AAmBC;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from './Components/Navbar'\nimport Movie from './Components/movieCard'\nimport Footer from './Components/footer'\nimport Search from './Components/search'\nimport Axios from \"axios\";\n\n\n\nfunction App() {\n  const [movies, setMovies] = useState({\n    loading: false,\n    movies: null\n  });\n\n  useEffect(() => {\n    setMovies({loading: true});\n    const url = \"http://www.omdbapi.com/?i=tt3896198&apikey=dc43bd63\";\n   fetch(url).then((res) => res.json())\n   .then(response => {\n     setMovies({loading: false, movies:(response.title)})\n     console.log(movies)\n   });\n  }, [movies]);\n\n// The fetch() API is an inbuilt JavaScript method for getting resources from a server or an API endpoint. It’s similar to XMLHttpRequest, but the fetch API provides a more powerful and flexible feature set.\n// const search = input => {\n//   fetch(`http://www.omdbapi.com/?t=Game of Thrones&Season=1`)\n//   .then(response => response.json())\n//   .then(data => {\n//     console.log(data);\n//    })\n  // }\n\n\n\nreturn (\n  <div className=\"App\">\n    <Navbar />\n    <h1>{movies}</h1>\n    {/* <ul> \n      {\n        (movies => <li>{movies.title}</li>)\n      } \n    </ul>  */}\n    {/* <div>\n      {\n     ( movies.map((movie, index) => (\n        <Movie key={`${index}-${movie.Title}`} movie={movie} />\n        ))\n      )}\n    </div> */}\n  </div>\n)\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}